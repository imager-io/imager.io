var app=function(){"use strict";function t(){}function e(t){return t()}function s(){return Object.create(null)}function c(t){t.forEach(e)}function l(t){return"function"==typeof t}function a(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function n(t,e,s){t.insertBefore(e,s||null)}function o(t){t.parentNode.removeChild(t)}function r(t){return document.createElement(t)}function i(){return t=" ",document.createTextNode(t);var t}function d(t,e,s){null==s?t.removeAttribute(e):t.getAttribute(e)!==s&&t.setAttribute(e,s)}let b;function m(t){b=t}const h=[],u=[],v=[],g=[],p=Promise.resolve();let f=!1;function y(t){v.push(t)}function $(){const t=new Set;do{for(;h.length;){const t=h.shift();m(t),S(t.$$)}for(;u.length;)u.pop()();for(let e=0;e<v.length;e+=1){const s=v[e];t.has(s)||(s(),t.add(s))}v.length=0}while(h.length);for(;g.length;)g.pop()();f=!1}function S(t){null!==t.fragment&&(t.update(t.dirty),c(t.before_update),t.fragment&&t.fragment.p(t.dirty,t.ctx),t.dirty=null,t.after_update.forEach(y))}const I=new Set;function O(t,e){t.$$.dirty||(h.push(t),f||(f=!0,p.then($)),t.$$.dirty=s()),t.$$.dirty[e]=!0}function x(a,n,o,r,i,d){const h=b;m(a);const u=n.props||{},v=a.$$={fragment:null,ctx:null,props:d,update:t,not_equal:i,bound:s(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(h?h.$$.context:[]),callbacks:s(),dirty:null};let g=!1;var p,f;v.ctx=o?o(a,u,(t,e,s=e)=>(v.ctx&&i(v.ctx[t],v.ctx[t]=s)&&(v.bound[t]&&v.bound[t](s),g&&O(a,t)),e)):u,v.update(),g=!0,c(v.before_update),v.fragment=!!r&&r(v.ctx),n.target&&(n.hydrate?v.fragment&&v.fragment.l(function(t){return Array.from(t.childNodes)}(n.target)):v.fragment&&v.fragment.c(),n.intro&&((p=a.$$.fragment)&&p.i&&(I.delete(p),p.i(f))),function(t,s,a){const{fragment:n,on_mount:o,on_destroy:r,after_update:i}=t.$$;n&&n.m(s,a),y(()=>{const s=o.map(e).filter(l);r?r.push(...s):c(s),t.$$.on_mount=[]}),i.forEach(y)}(a,n.target,n.anchor),$()),m(h)}class k{$destroy(){!function(t,e){const s=t.$$;null!==s.fragment&&(c(s.on_destroy),s.fragment&&s.fragment.d(e),s.on_destroy=s.fragment=null,s.ctx={})}(this,1),this.$destroy=t}$on(t,e){const s=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return s.push(e),()=>{const t=s.indexOf(e);-1!==t&&s.splice(t,1)}}$set(){}}function E(e){let s,c,l;return{c(){(s=r("header")).innerHTML='<div class="banner svelte-blc2cs"><h1 class="svelte-blc2cs">Imager</h1> \n\t\t<hr class="svelte-blc2cs"> \n\t\t<a href="https://github.com/imager-io" class="svelte-blc2cs"><i class="fab fa-github svelte-blc2cs"></i> \n\t\t\t<span class="svelte-blc2cs">GitHub Organization</span></a> \n\t\t<a href="mailto: hello@colbyn.com" class="svelte-blc2cs"><i class="fas fa-envelope svelte-blc2cs"></i> \n\t\t\t<span class="svelte-blc2cs">hello@colbyn.com</span></a></div> \n\t<div><p class="svelte-blc2cs"><b>Site performance tools for efficiently distributing media on the web.</b>  <small>Everything is free and open source, with absolutely no SAAS lock-ins or vendors.</small></p></div>',c=i(),(l=r("main")).innerHTML='<h2 class="svelte-blc2cs">Features</h2> \n\t<section class="svelte-blc2cs"><h3 class="svelte-blc2cs">Brute Force Image Optimization</h3> \n\t\t<blockquote class="svelte-blc2cs">Optimizes the compression using ML based metrics in a trial ’n error sorta manner.</blockquote> \n\t\t<p class="svelte-blc2cs">This is a tool that can competitively optimize <small>(e.g.)</small>  <b>extremely noisy, high resolution images</b>; at the expense of increased encoding time and CPU overhead. This is a tradeoff that should be suitable for over 90% of online content, where site performance matters.</p> \n\t\t<p class="svelte-blc2cs">It&#39;s pretty easy too.</p> \n\t\t\n\t\t<small class="svelte-blc2cs">Using the CLI interface:</small> \n\t\t<pre code="" class="svelte-blc2cs">\n$ imager -i <code path="" class="svelte-blc2cs">path/to/input/images/*.jpeg</code> -o <code path="" class="svelte-blc2cs">output/</code></pre> \n\t\t<small class="svelte-blc2cs">Using the HTTP server:</small> \n\t\t<pre code="" class="svelte-blc2cs">\n$ imager-server --address 127.0.0.1:3000\n$ http 127.0.0.1:3000/opt &lt; <code path="" class="svelte-blc2cs">path/to/input/image.jpeg</code> &gt; <code path="" class="svelte-blc2cs">path/to/output/image.jpeg</code></pre> \n\t\t<small class="svelte-blc2cs">Using the JavaScript <em>non-blocking</em> API:</small> \n\t\t<pre code="" class="svelte-blc2cs">\nconst {<code highlight="" class="svelte-blc2cs">ImageBuffer</code>} = require(<code string="" class="svelte-blc2cs">&quot;imager-io&quot;</code>);\n<code highlight="" class="svelte-blc2cs">ImageBuffer</code>\n\t<code highlight="" class="svelte-blc2cs">.open(<code string="" class="svelte-blc2cs">&quot;source-image.jpeg&quot;</code>)</code>\n\t.then(buffer =&gt; <code highlight="" class="svelte-blc2cs">buffer.opt()</code>)\n\t.then(buffer =&gt; <code highlight="" class="svelte-blc2cs">buffer.save(<code string="" class="svelte-blc2cs">&quot;result.jpeg&quot;</code>)</code>)\n\t.then(() =&gt; console.log(<code string="" class="svelte-blc2cs">&quot;done&quot;</code>));\n\t\t</pre></section> \n\n\t<h2 class="svelte-blc2cs"><a href="https://github.com/colbyn/imager-bench-2019-11-2" class="svelte-blc2cs">Compression Benchmarks <i style="font-size: 18px;" class="fas fa-external-link-alt"></i></a></h2> \n\t<section class="svelte-blc2cs"><pre class="svelte-blc2cs">\nsource        : ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 39.00M (4 images)\nkraken.io     : ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 24M\njpegmini.com  : ▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇▇ 16M\ncompression.ai: ▇▇▇▇▇▇▇▇ 8.90M\nimager        : ▇▇▇▇ 4.20M\n\t\t</pre></section> \n\n\t<h2 class="svelte-blc2cs">Supported Image Optimization Formats</h2> \n\t<section class="svelte-blc2cs"><table class="svelte-blc2cs"><tr><th class="svelte-blc2cs">Format</th> \n\t\t\t\t<th class="svelte-blc2cs">Status</th></tr> \n\t\t\t<tr><td class="svelte-blc2cs">JPEG</td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>GOOD</small></td></tr> \n\t\t\t<tr><td class="svelte-blc2cs">WebP</td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>EXPERIMENTAL</small></td></tr> \n\t\t\t<tr><td class="svelte-blc2cs">PNG</td> \n\t\t\t\t<td class="svelte-blc2cs">❎<small>EXPERIMENTAL</small></td></tr></table></section> \n\n\t<h2 class="svelte-blc2cs">Ecosystem</h2> \n\t<section class="svelte-blc2cs"><h3 class="svelte-blc2cs">Operating Systems</h3> \n\t\t<table class="svelte-blc2cs"><tr><th class="svelte-blc2cs">Name</th> \n\t\t\t\t<th class="svelte-blc2cs">Status</th></tr> \n\t\t\t<tr><td class="svelte-blc2cs"><code>Linux</code></td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>GOOD</small></td></tr> \n\t\t\t<tr><td class="svelte-blc2cs"><code>MacOS</code></td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>GOOD</small></td></tr> \n\t\t\t<tr><td class="svelte-blc2cs"><code>Windows</code></td> \n\t\t\t\t<td class="svelte-blc2cs">❌<small>UNPRIORITIZED</small>  <small style="color: #5f5f5f;">(Use WSL)</small></td></tr></table> \n\t\t<h3 class="svelte-blc2cs">Command Line Tools </h3> \n\t\t<table class="svelte-blc2cs"><tr><th class="svelte-blc2cs">Name</th> \n\t\t\t\t<th class="svelte-blc2cs">Status</th> \n\t\t\t\t<th class="svelte-blc2cs">Description</th> \n\t\t\t\t<th class="svelte-blc2cs">Links</th></tr> \n\t\t\t<tr><td class="svelte-blc2cs"><code>imager</code></td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>GOOD</small></td> \n\t\t\t\t<td class="svelte-blc2cs">The Imager CLI Interface</td> \n\t\t\t\t<td class="svelte-blc2cs"><a href="https://github.com/imager-io/imager">Source</a>\n\t\t\t\t\t·\n\t\t\t\t\t<a href="https://github.com/imager-io/imager/blob/master/docs/bin/imager-cli.md">Documentation</a></td></tr> \n\t\t\t<tr><td class="svelte-blc2cs"><code>imager-server</code></td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>GOOD</small></td> \n\t\t\t\t<td class="svelte-blc2cs">The Imager Server Interface</td> \n\t\t\t\t<td class="svelte-blc2cs"><a href="https://github.com/imager-io/imager">Source</a>\n\t\t\t\t\t·\n\t\t\t\t\t<a href="https://github.com/imager-io/imager/blob/master/docs/bin/imager-server.md">Documentation</a></td></tr></table> \n\t\t<h3 class="svelte-blc2cs">Development Tools</h3> \n\t\t<table class="svelte-blc2cs"><tr><th class="svelte-blc2cs">Name</th> \n\t\t\t\t<th class="svelte-blc2cs">Status</th> \n\t\t\t\t<th class="svelte-blc2cs">Description</th> \n\t\t\t\t<th class="svelte-blc2cs">Links</th></tr> \n\t\t\t<tr><td class="svelte-blc2cs"><code>WebPack</code></td> \n\t\t\t\t<td class="svelte-blc2cs">❎<small>UNOFFICIAL</small></td> \n\t\t\t\t<td class="svelte-blc2cs">Using Vanilla Webpack</td> \n\t\t\t\t<td class="svelte-blc2cs"><a href="https://github.com/imager-io/webpack-imager-example-vanilla">Example</a></td></tr></table> \n\t\t<h3 class="svelte-blc2cs">Languages</h3> \n\t\t<table class="svelte-blc2cs"><tr><th class="svelte-blc2cs">Name</th> \n\t\t\t\t<th class="svelte-blc2cs">Status</th> \n\t\t\t\t<th class="svelte-blc2cs">Self Contained</th> \n\t\t\t\t<th class="svelte-blc2cs">Links</th></tr> \n\t\t\t<tr><td class="svelte-blc2cs">NodeJS</td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>GOOD</small></td> \n\t\t\t\t<td class="svelte-blc2cs">✅<small>YES</small></td> \n\t\t\t\t<td class="svelte-blc2cs"><a href="https://github.com/imager-io/imager">Source</a>\n\t\t\t\t\t·\n\t\t\t\t\t<a href="https://github.com/imager-io/imager/blob/master/docs/imager-nodejs.md">Documentation</a>\n\t\t\t\t\t·\n\t\t\t\t\t<a href="https://github.com/imager-io/imager-nodejs-example">Example</a>\n\t\t\t\t\t·\n\t\t\t\t\t<a href="https://www.npmjs.com/package/imager-io">NPM</a></td></tr></table> \n\t\t<h3 class="svelte-blc2cs">Low-Level Libraries</h3> \n\t\t<table class="svelte-blc2cs"><tr><th class="svelte-blc2cs">Name</th> \n\t\t\t\t<th class="svelte-blc2cs">Source</th> \n\t\t\t\t<th class="svelte-blc2cs">Description</th></tr> \n\t\t\t<tr><td class="svelte-blc2cs">imager-core</td> \n\t\t\t\t<td class="svelte-blc2cs"><a href="https://github.com/imager-io/imager-core">GitHub</a></td> \n\t\t\t\t<td class="svelte-blc2cs">Imager AV Toolkit and Essential Codecs</td></tr> \n\t\t\t<tr><td class="svelte-blc2cs">imager-advanced</td> \n\t\t\t\t<td class="svelte-blc2cs"><a href="https://github.com/imager-io/imager-advanced">GitHub</a></td> \n\t\t\t\t<td class="svelte-blc2cs">Newer, Better Image Codecs</td></tr></table></section> \n\n\t<h2 class="svelte-blc2cs">Articles</h2> \n\t<section class="svelte-blc2cs"><ul class="svelte-blc2cs"><li><a href="https://medium.com/@colbyn/modern-image-optimization-for-2020-issues-solutions-and-open-source-solutions-543af00e3e51">Modern Image Optimization for 2020 - Issues, Solutions, and Open Source Solutions</a></li></ul></section>',d(s,"class","top svelte-blc2cs"),d(l,"class","svelte-blc2cs")},m(t,e){n(t,s,e),n(t,c,e),n(t,l,e)},p:t,i:t,o:t,d(t){t&&o(s),t&&o(c),t&&o(l)}}}return new class extends k{constructor(t){super(),x(this,t,null,E,a,{})}}({target:document.body,props:{name:"world"}})}();
//# sourceMappingURL=bundle.js.map
